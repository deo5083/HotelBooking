/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hotelbooking.views;

import hotelbooking.controllers.CustomerTableController;
import hotelbooking.controllers.HotelTableController;
import hotelbooking.controllers.LoginController;
import hotelbooking.controllers.SerializedDataController;
import hotelbooking.models.Customer;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author David Ortiz
 */
public class CustomerTableView extends javax.swing.JFrame {
    
//fields
    private DefaultTableModel model;
    
    private LoginController parentLoginController;
    private CustomerTableController customerParentController;
    private int currentSelectedRow;
    private String[] currentCustomer;
    private ArrayList<Customer> customerArrayList;
    
    private SerializedDataController serializedData;
    /**
     * Creates new form CustomerDetails
     */
    //contructor
    public CustomerTableView(LoginController controller) throws FileNotFoundException {
        initComponents();
        
        parentLoginController = controller;
        
        this.serializedData = parentLoginController.getSerializedDataCollectionController();
        this.customerParentController = new CustomerTableController(this.serializedData);
        
        cancelButton.addActionListener(new CancelListener());
        editButton.addActionListener(new EditListener());
        newFamilyButton.addActionListener(new NewFamilyButtonListener());
        newBusinessButton.addActionListener(new NewBusinessButtonListener());
        selectButton.addActionListener(new SelectListener());
        
    }
    
     public CustomerTableView() {
        initComponents();
        newFamilyButton.addActionListener(new NewFamilyButtonListener());
        newBusinessButton.addActionListener(new NewBusinessButtonListener());
        cancelButton.addActionListener(new CancelListener());
        editButton.addActionListener(new EditListener());
        selectButton.addActionListener(new SelectListener());

    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        scroll = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        newFamilyButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        selectButton = new javax.swing.JButton();
        newBusinessButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(601, 471));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "First name", "Last name", "Number of people"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.getTableHeader().setReorderingAllowed(false);
        scroll.setViewportView(table);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        jLabel1.setText("Select user");

        newFamilyButton.setText("New Family");

        cancelButton.setText("Cancel");

        editButton.setText("Edit");

        selectButton.setText("Select");

        newBusinessButton.setText("New Business");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newBusinessButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cancelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(newFamilyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(editButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(selectButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(newBusinessButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newFamilyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                .addComponent(selectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(89, Short.MAX_VALUE)
                        .addComponent(scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)))
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addGap(37, 37, 37)
                .addComponent(scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerTableView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerTableView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerTableView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerTableView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new CustomerDetailsView().setVisible(true);
//            }
//        });
        //</editor-fold>
        //</editor-fold>
        
        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new CustomerTableView().setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton editButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton newBusinessButton;
    private javax.swing.JButton newFamilyButton;
    private javax.swing.JScrollPane scroll;
    private javax.swing.JButton selectButton;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables

    //accessors
    public CustomerTableView getCustomerDetailView(){
        return this;
    }
    
    public DefaultTableModel getModel(){
        return this.model;
    }
    
    //mutators
    public void setCurrentCustomer(String[] _current){
        this.currentCustomer = _current;
    }
    
    //others
    public void createTable(String[] fnames, String[] lnames, String[] amt){
        
        this.model = (DefaultTableModel) table.getModel();
        
        for(int i=0; i<fnames.length; i++){
            Object[] obj = new Object[]{fnames[i], lnames[i], amt[i]};
            model.addRow(obj);
        }
    }
    
    //listeners
    private class SelectListener implements ActionListener{

        @Override
        public void actionPerformed(ActionEvent e) {
            
            int selectedRow = table.getSelectedRow();
            CustomerTableView.this.parentLoginController.setSelectedRow(selectedRow);
            
            if(!(selectedRow >= 0) ){
                System.out.println("User didnt select item.");
                
            } else {
                
                String selectedName = CustomerTableView.this.serializedData.getCustomersList().get(selectedRow).getFullName();

                CustomerTableView.this.parentLoginController.setNameLabel(selectedName);
                CustomerTableView.this.parentLoginController.setLoginView(true);
                CustomerTableView.this.dispose();
            }
            
        }
        
    }
    private class CancelListener implements ActionListener{

        @Override
        public void actionPerformed(ActionEvent e) {
            parentLoginController.setLoginView(true);
            CustomerTableView.this.dispose();
            
        } 
        
    }
    private class EditListener implements ActionListener{

        @Override
        public void actionPerformed(ActionEvent e) {
            int selectedRow = table.getSelectedRow();
            CustomerTableView.this.parentLoginController.setSelectedRow(selectedRow);
            if(!(selectedRow >= 0) ){
                System.out.println("User didnt select item.");
                
            } else {
                
                
                CustomerTableView.this.customerParentController.setCustomerDetailView(CustomerTableView.this);
                int selectedModelRow = table.convertRowIndexToModel(selectedRow);
                
                CustomerTableView.this.customerParentController.getEditCustomerView(selectedModelRow);
                CustomerTableView.this.setVisible(false);
            }
        }
       
    }
     
    private class NewFamilyButtonListener implements ActionListener{

        @Override
        public void actionPerformed(ActionEvent e) {    
            
            CustomerTableView.this.customerParentController.setCustomerDetailView(CustomerTableView.this);
            CustomerTableView.this.customerParentController.getEditCustomerViewNew();
            CustomerTableView.this.customerParentController.prepareNewFamily();
            CustomerTableView.this.dispose();
            
        }
    }
    
    private class NewBusinessButtonListener implements ActionListener{

        @Override
        public void actionPerformed(ActionEvent e) {    
            
            CustomerTableView.this.customerParentController.setCustomerDetailView(CustomerTableView.this);
            CustomerTableView.this.customerParentController.getEditCustomerViewNew();
            CustomerTableView.this.customerParentController.prepareNewBusiness();
            CustomerTableView.this.dispose();
            
        }
    }

}
